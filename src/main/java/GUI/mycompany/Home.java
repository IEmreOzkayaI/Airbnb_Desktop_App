/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.mycompany;

import advertisement.abstracts.House;
import javax.swing.table.DefaultTableModel;
import advertisement.concretes.Advertisement;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableRowSorter;
import user.concretes.Customer;
import user.concretes.HouseOwner;
import user.concretes.Person;
import user.concretes.Personnel;

/**
 *
 * @author EmreOzkaya
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home2
     */
    private boolean isAdvertisementsListed = false;
    private boolean isPersonListed = false;
    static boolean isLogin = false;
    private static Person person;
    private static HouseOwner houseOwner;
    private static Customer customer;
    private static Personnel personnel;
    static boolean profileMenuOpen = false;
    DefaultTableModel dfmodel = new DefaultTableModel();

    public Home() {
        initComponents();
        populateTable();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        this.isLogin = isLogin;

    }

    public Home(boolean isLogin, HouseOwner houseOwner) {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        this.houseOwner = houseOwner;
        this.isLogin = isLogin;

        if (isLogin) {
            signUp.hide();
            logIn.hide();
            searchBar.setBounds(100, 8, 580, 41);
            addAdvertisement.setBounds(725, 8, 180, 40);
            profileMenu.setBounds(920, 8, 100, 40);
            profileMenu.setText(houseOwner.getName().toUpperCase());
            navbar.setPreferredSize(new Dimension(1049, 56));
            this.navbar.add(searchBar);
            this.navbar.add(profileMenu);
            this.navbar.add(addAdvertisement);

        }
    }

    public Home(boolean isLogin, Personnel personnel) {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        this.personnel = personnel;
        this.isLogin = isLogin;

        if (isLogin) {

            PersonnelScreen pScreen = new PersonnelScreen(true, personnel);
            pScreen.show();
            this.dispose();

        }
    }

    public Home(boolean isLogin, Customer customer) {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        this.customer = customer;
        this.isLogin = isLogin;

        if (isLogin) {
            signUp.hide();
            logIn.hide();
            searchBar.setBounds(100, 8, 580, 41);
            becameHouseOwner.setBounds(700, 8, 210, 40);
            profileMenu.setBounds(920, 8, 100, 40);
            profileMenu.setText(customer.getName().toUpperCase());

            navbar.setPreferredSize(new Dimension(1049, 56));
            this.navbar.add(searchBar);
            this.navbar.add(profileMenu);
            this.navbar.add(becameHouseOwner);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        becameHouseOwner = new javax.swing.JButton();
        profileDetail = new javax.swing.JPanel();
        profile = new javax.swing.JButton();
        wallet = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        profileMenu = new javax.swing.JButton();
        addAdvertisement = new javax.swing.JButton();
        content = new javax.swing.JPanel();
        leftSide = new javax.swing.JPanel();
        residenceFilter = new javax.swing.JButton();
        apartmentFilter = new javax.swing.JButton();
        villaFilter = new javax.swing.JButton();
        treeHouseFilter = new javax.swing.JButton();
        rightSide = new javax.swing.JPanel();
        navbar = new javax.swing.JPanel();
        signUp = new javax.swing.JButton();
        logIn = new javax.swing.JButton();
        searchBar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAdvertisements = new javax.swing.JTable();

        becameHouseOwner.setBackground(new java.awt.Color(153, 153, 153));
        becameHouseOwner.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        becameHouseOwner.setForeground(new java.awt.Color(255, 255, 255));
        becameHouseOwner.setText("Became HouseOwner");
        becameHouseOwner.setBorder(null);
        becameHouseOwner.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        becameHouseOwner.setPreferredSize(new java.awt.Dimension(210, 40));
        becameHouseOwner.setRequestFocusEnabled(false);
        becameHouseOwner.setVerifyInputWhenFocusTarget(false);
        becameHouseOwner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                becameHouseOwnerMouseClicked(evt);
            }
        });
        becameHouseOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                becameHouseOwnerActionPerformed(evt);
            }
        });

        profileDetail.setBackground(new java.awt.Color(51, 51, 51));
        profileDetail.setMinimumSize(new java.awt.Dimension(100, 124));
        profileDetail.setPreferredSize(new java.awt.Dimension(100, 124));

        profile.setBackground(new java.awt.Color(51, 51, 51));
        profile.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        profile.setForeground(new java.awt.Color(255, 255, 255));
        profile.setText("Profile");
        profile.setBorder(null);
        profile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        profile.setDefaultCapable(false);
        profile.setPreferredSize(new java.awt.Dimension(100, 40));
        profile.setRequestFocusEnabled(false);
        profile.setVerifyInputWhenFocusTarget(false);
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        wallet.setBackground(new java.awt.Color(51, 51, 51));
        wallet.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        wallet.setForeground(new java.awt.Color(255, 255, 255));
        wallet.setText("Wallet");
        wallet.setBorder(null);
        wallet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        wallet.setDefaultCapable(false);
        wallet.setPreferredSize(new java.awt.Dimension(100, 40));
        wallet.setRequestFocusEnabled(false);
        wallet.setVerifyInputWhenFocusTarget(false);
        wallet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walletActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(51, 51, 51));
        exit.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("Exit");
        exit.setBorder(null);
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.setDefaultCapable(false);
        exit.setPreferredSize(new java.awt.Dimension(100, 40));
        exit.setRequestFocusEnabled(false);
        exit.setVerifyInputWhenFocusTarget(false);
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout profileDetailLayout = new javax.swing.GroupLayout(profileDetail);
        profileDetail.setLayout(profileDetailLayout);
        profileDetailLayout.setHorizontalGroup(
            profileDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profileDetailLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(profileDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wallet, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(214, 214, 214))
        );
        profileDetailLayout.setVerticalGroup(
            profileDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileDetailLayout.createSequentialGroup()
                .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(wallet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        profileDetail.getAccessibleContext().setAccessibleName("");

        profileMenu.setBackground(new java.awt.Color(51, 51, 51));
        profileMenu.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        profileMenu.setForeground(new java.awt.Color(255, 255, 255));
        profileMenu.setBorder(null);
        profileMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        profileMenu.setDefaultCapable(false);
        profileMenu.setPreferredSize(new java.awt.Dimension(100, 40));
        profileMenu.setRequestFocusEnabled(false);
        profileMenu.setVerifyInputWhenFocusTarget(false);
        profileMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMenuMouseClicked(evt);
            }
        });
        profileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileMenuActionPerformed(evt);
            }
        });

        addAdvertisement.setBackground(new java.awt.Color(153, 153, 153));
        addAdvertisement.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addAdvertisement.setForeground(new java.awt.Color(255, 255, 255));
        addAdvertisement.setText("+ Advertisement");
        addAdvertisement.setBorder(null);
        addAdvertisement.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addAdvertisement.setDefaultCapable(false);
        addAdvertisement.setPreferredSize(new java.awt.Dimension(143, 40));
        addAdvertisement.setRequestFocusEnabled(false);
        addAdvertisement.setVerifyInputWhenFocusTarget(false);
        addAdvertisement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAdvertisementMouseClicked(evt);
            }
        });
        addAdvertisement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAdvertisementActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        leftSide.setBackground(new java.awt.Color(255, 90, 95));
        leftSide.setPreferredSize(new java.awt.Dimension(220, 800));

        residenceFilter.setBackground(new java.awt.Color(255, 90, 95));
        residenceFilter.setBorder(javax.swing.BorderFactory.createTitledBorder("Residence"));

        apartmentFilter.setBackground(new java.awt.Color(255, 90, 95));
        apartmentFilter.setBorder(javax.swing.BorderFactory.createTitledBorder("Manor"));

        villaFilter.setBackground(new java.awt.Color(255, 90, 95));
        villaFilter.setBorder(javax.swing.BorderFactory.createTitledBorder("Villa"));

        treeHouseFilter.setBackground(new java.awt.Color(255, 90, 95));
        treeHouseFilter.setBorder(javax.swing.BorderFactory.createTitledBorder("Tree House"));

        javax.swing.GroupLayout leftSideLayout = new javax.swing.GroupLayout(leftSide);
        leftSide.setLayout(leftSideLayout);
        leftSideLayout.setHorizontalGroup(
            leftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftSideLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(leftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(treeHouseFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villaFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apartmentFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(residenceFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        leftSideLayout.setVerticalGroup(
            leftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftSideLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(residenceFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(treeHouseFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(apartmentFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(villaFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        rightSide.setBackground(new java.awt.Color(51, 51, 51));
        rightSide.setPreferredSize(new java.awt.Dimension(1101, 800));

        navbar.setBackground(new java.awt.Color(153, 153, 153));
        navbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        signUp.setBackground(new java.awt.Color(153, 153, 153));
        signUp.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        signUp.setForeground(new java.awt.Color(255, 255, 255));
        signUp.setText("Sign Up");
        signUp.setBorder(null);
        signUp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signUp.setDefaultCapable(false);
        signUp.setPreferredSize(new java.awt.Dimension(80, 40));
        signUp.setRequestFocusEnabled(false);
        signUp.setVerifyInputWhenFocusTarget(false);
        signUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpActionPerformed(evt);
            }
        });

        logIn.setBackground(new java.awt.Color(51, 51, 51));
        logIn.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        logIn.setForeground(new java.awt.Color(255, 255, 255));
        logIn.setText("Log In");
        logIn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logIn.setDefaultCapable(false);
        logIn.setPreferredSize(new java.awt.Dimension(80, 40));
        logIn.setRequestFocusEnabled(false);
        logIn.setVerifyInputWhenFocusTarget(false);
        logIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInActionPerformed(evt);
            }
        });

        searchBar.setBackground(new java.awt.Color(153, 153, 153));
        searchBar.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        searchBar.setForeground(new java.awt.Color(255, 255, 255));
        searchBar.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchBar.setToolTipText("Search..");
        searchBar.setBorder(null);
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });
        searchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout navbarLayout = new javax.swing.GroupLayout(navbar);
        navbar.setLayout(navbarLayout);
        navbarLayout.setHorizontalGroup(
            navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navbarLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(signUp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(logIn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        navbarLayout.setVerticalGroup(
            navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navbarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBar, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addContainerGap())
        );

        searchBar.getAccessibleContext().setAccessibleName("");

        tblAdvertisements.setBackground(new java.awt.Color(153, 153, 153));
        tblAdvertisements.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tblAdvertisements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "test", "test", "test", "test", "test", "test"}
            },
            new String [] {
                "Name", "Type", "Heating", "Room Number", "Price", "Adress", "Short Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAdvertisements.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblAdvertisements.setShowGrid(true);
        jScrollPane1.setViewportView(tblAdvertisements);
        if (tblAdvertisements.getColumnModel().getColumnCount() > 0) {
            tblAdvertisements.getColumnModel().getColumn(0).setResizable(false);
            tblAdvertisements.getColumnModel().getColumn(1).setResizable(false);
            tblAdvertisements.getColumnModel().getColumn(2).setResizable(false);
            tblAdvertisements.getColumnModel().getColumn(3).setResizable(false);
            tblAdvertisements.getColumnModel().getColumn(4).setResizable(false);
            tblAdvertisements.getColumnModel().getColumn(5).setResizable(false);
            tblAdvertisements.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout rightSideLayout = new javax.swing.GroupLayout(rightSide);
        rightSide.setLayout(rightSideLayout);
        rightSideLayout.setHorizontalGroup(
            rightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightSideLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(rightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(navbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        rightSideLayout.setVerticalGroup(
            rightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightSideLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(navbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addComponent(leftSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightSide, javax.swing.GroupLayout.PREFERRED_SIZE, 1116, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftSide, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
            .addComponent(rightSide, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
        );

        leftSide.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpActionPerformed
        // TODO add your handling code here:
        SignUp signUp = new SignUp();
        this.dispose();
        signUp.show();

    }//GEN-LAST:event_signUpActionPerformed

    private void logInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInActionPerformed
        // TODO add your handling code here:
        LogIn logIn = new LogIn();
        this.dispose();
        logIn.show();

    }//GEN-LAST:event_logInActionPerformed

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBarActionPerformed

    private void becameHouseOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_becameHouseOwnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_becameHouseOwnerActionPerformed

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "profile clicked");

    }//GEN-LAST:event_profileActionPerformed

    private void walletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walletActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "wallet clicked");
    }//GEN-LAST:event_walletActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Home home = new Home();
        home.show();

    }//GEN-LAST:event_exitActionPerformed

    private void profileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profileMenuActionPerformed

    private void profileMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMenuMouseClicked
        // TODO add your handling code here:
        if (profileMenuOpen) {
            this.profileDetail.hide();
            this.rightSide.remove(profileDetail);
            profileMenuOpen = false;
            jScrollPane1.setVisible(true);

        } else {
            this.rightSide.add(profileDetail);
            profileDetail.show();
            this.profileDetail.add(wallet);
            this.profileDetail.add(profile);
            this.profileDetail.add(exit);

            profileDetail.setBounds(947, 85, 100, 120);
            profile.setBounds(0, 0, 100, 40);
            wallet.setBounds(0, 41, 100, 40);
            exit.setBounds(0, 82, 100, 40);
            jScrollPane1.setVisible(false);
            profileMenuOpen = true;
        }
    }//GEN-LAST:event_profileMenuMouseClicked

    private void becameHouseOwnerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_becameHouseOwnerMouseClicked
        // TODO add your handling code here:

        // houseowner tablosuna aktarılacak tüm data . 
        int result = JOptionPane.showConfirmDialog(null, "Do you want to be a House Owner");

        if (result == 0) {
            HouseOwner houseOwner = new HouseOwner();
            houseOwner.setBirthDate(customer.getBirthDate());
            houseOwner.setEmail(customer.getEmail());
            houseOwner.setGender(customer.getGender());
            houseOwner.setId(customer.getId());
            houseOwner.setIdentityNumber(customer.getIdentityNumber());
            houseOwner.setName(customer.getName());
            houseOwner.setPassword(customer.getPassword());
            houseOwner.setPhoneNumber(customer.getPhoneNumber());
            houseOwner.setSurname(customer.getSurname());
            houseOwner.setComments(customer.getComments());
            houseOwner.setActivationPersonnelId(customer.getActivationPersonnelId());
            houseOwner.setRentedHouse(customer.getRentedHouse());
            houseOwner.setWallet(customer.getWallet());
            houseOwner.setActivationResult(true);
            houseOwner.setIsBlocked(false);
            houseOwner.registerFromCustomer(houseOwner);
            JOptionPane.showMessageDialog(null, "Welcome " + customer.getName().toUpperCase() + " . Now you can rent your houses.");
            this.dispose();
            Home home = new Home(true, houseOwner);
            home.show();
        }
        if (result == 1) {
            JOptionPane.showMessageDialog(null, "Well we can't wait to see you among us");

        }
    }//GEN-LAST:event_becameHouseOwnerMouseClicked
    private void populateTable() {
        if (!isAdvertisementsListed) {
            dfmodel.setRowCount(0);
            dfmodel = (DefaultTableModel) tblAdvertisements.getModel();
            dfmodel.getColumnClass(0);
            Advertisement ad = new Advertisement();
            List<Advertisement> advertisementList = ad.getAllAdvertisementsIsActiveTrue();
            for (Advertisement advertisement : advertisementList) {
                House house = advertisement.getHouse();
                byte[] icon = house.getHouseIconImg();
                Image img = Toolkit.getDefaultToolkit().createImage(icon).getScaledInstance(250, 250, Image.SCALE_SMOOTH);
                ImageIcon imgicn=new ImageIcon(img);
                Object tbData[] = {imgicn, advertisement.getAdvertisementName(), advertisement.getAdvertisementType(), advertisement.getHouse().getHeating(), advertisement.getHouse().getRoomNumber(),
                    advertisement.getPrice(), advertisement.getHouse().getLocation(), advertisement.getHouse().getShortDescription()};

                dfmodel.addRow(tbData);
            }
            tblAdvertisements.setRowHeight(250);
            tblAdvertisements.getTableHeader().setReorderingAllowed(false);
            tblAdvertisements.getColumnModel().getColumn(0).setPreferredWidth(250);
            tblAdvertisements.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());
            isAdvertisementsListed = true;
        }
    }
    private class ImageRenderer extends DefaultTableCellRenderer{

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            JLabel lphoto = new JLabel((ImageIcon)value);
            return lphoto;
        }
        
    }
    private void addAdvertisementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAdvertisementActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addAdvertisementActionPerformed

    private void addAdvertisementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAdvertisementMouseClicked
        // TODO add your handling code here:
        AdvertisementAdd addAdvertismeent = new AdvertisementAdd(this.houseOwner);
        this.dispose();
        addAdvertismeent.show();

    }//GEN-LAST:event_addAdvertisementMouseClicked

    private void searchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarKeyReleased
        // TODO add your handling code here:
        String searchKey = searchBar.getText();
        TableRowSorter<DefaultTableModel> tableRowSorter = new TableRowSorter<DefaultTableModel>(dfmodel);
        tblAdvertisements.setRowSorter(tableRowSorter);
        tableRowSorter.setRowFilter(RowFilter.regexFilter(searchKey));
    }//GEN-LAST:event_searchBarKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Home().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAdvertisement;
    private javax.swing.JButton apartmentFilter;
    private javax.swing.JButton becameHouseOwner;
    private javax.swing.JPanel content;
    private javax.swing.JButton exit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel leftSide;
    private javax.swing.JButton logIn;
    private javax.swing.JPanel navbar;
    private javax.swing.JButton profile;
    private javax.swing.JPanel profileDetail;
    private javax.swing.JButton profileMenu;
    private javax.swing.JButton residenceFilter;
    private javax.swing.JPanel rightSide;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton signUp;
    private javax.swing.JTable tblAdvertisements;
    private javax.swing.JButton treeHouseFilter;
    private javax.swing.JButton villaFilter;
    private javax.swing.JButton wallet;
    // End of variables declaration//GEN-END:variables
}
