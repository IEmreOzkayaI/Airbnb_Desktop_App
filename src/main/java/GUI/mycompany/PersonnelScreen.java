/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.mycompany;

import advertisement.concretes.Advertisement;
import java.awt.Dimension;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import user.concretes.Person;
import user.concretes.Personnel;

/**
 *
 * @author EmreOzkaya
 */
public class PersonnelScreen extends javax.swing.JFrame {

    /**
     * Creates new form Home2
     */
    static boolean isLogin = false;
    private static Person person;
    private static Personnel personnel;
    static boolean profileMenuOpen = false;
    Connection db = Singleton.SingletonConnection.getCon();
    PreparedStatement pst;
    Statement st;
    ResultSet rs;
    private boolean isAdvertisementsListed = false;
    private boolean isPersonListed = false;

    public PersonnelScreen() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        this.isLogin = isLogin;

    }

    public PersonnelScreen(boolean isLogin, Personnel personnel) {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        this.personnel = personnel;
        this.isLogin = isLogin;
        if (isLogin) {
            profileMenu.setText(personnel.getName().toUpperCase());
            getAdvertisementDatas();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        profileDetail = new javax.swing.JPanel();
        profile = new javax.swing.JButton();
        wallet = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        personScrool = new javax.swing.JScrollPane();
        persons = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        blockedPersons = new javax.swing.JTable();
        validate = new javax.swing.JButton();
        reject = new javax.swing.JButton();
        content = new javax.swing.JPanel();
        personnelScreen = new javax.swing.JPanel();
        navbar1 = new javax.swing.JPanel();
        profileMenu = new javax.swing.JButton();
        Advertisements = new javax.swing.JButton();
        persons1 = new javax.swing.JButton();
        persons2 = new javax.swing.JButton();
        advertisementScrool = new javax.swing.JScrollPane();
        advertisements = new javax.swing.JTable();

        profileDetail.setBackground(new java.awt.Color(51, 51, 51));
        profileDetail.setMinimumSize(new java.awt.Dimension(100, 124));
        profileDetail.setPreferredSize(new java.awt.Dimension(100, 124));

        profile.setBackground(new java.awt.Color(51, 51, 51));
        profile.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        profile.setForeground(new java.awt.Color(255, 255, 255));
        profile.setText("Profile");
        profile.setBorder(null);
        profile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        profile.setDefaultCapable(false);
        profile.setPreferredSize(new java.awt.Dimension(100, 40));
        profile.setRequestFocusEnabled(false);
        profile.setRolloverEnabled(false);
        profile.setVerifyInputWhenFocusTarget(false);
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        wallet.setBackground(new java.awt.Color(51, 51, 51));
        wallet.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        wallet.setForeground(new java.awt.Color(255, 255, 255));
        wallet.setText("Wallet");
        wallet.setBorder(null);
        wallet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        wallet.setDefaultCapable(false);
        wallet.setPreferredSize(new java.awt.Dimension(100, 40));
        wallet.setRequestFocusEnabled(false);
        wallet.setRolloverEnabled(false);
        wallet.setVerifyInputWhenFocusTarget(false);
        wallet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walletActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(51, 51, 51));
        exit.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("Log In");
        exit.setBorder(null);
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit.setDefaultCapable(false);
        exit.setPreferredSize(new java.awt.Dimension(100, 40));
        exit.setRequestFocusEnabled(false);
        exit.setRolloverEnabled(false);
        exit.setVerifyInputWhenFocusTarget(false);
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout profileDetailLayout = new javax.swing.GroupLayout(profileDetail);
        profileDetail.setLayout(profileDetailLayout);
        profileDetailLayout.setHorizontalGroup(
            profileDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profileDetailLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(profileDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wallet, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(214, 214, 214))
        );
        profileDetailLayout.setVerticalGroup(
            profileDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileDetailLayout.createSequentialGroup()
                .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(wallet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        profileDetail.getAccessibleContext().setAccessibleName("");

        personScrool.setPreferredSize(new java.awt.Dimension(1320, 406));

        persons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        persons.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        persons.setRowHeight(50);
        persons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Person Id", "Name", "Surname", "Email", "Identity Number", "Birth Date", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        persons.getTableHeader().setReorderingAllowed(false);
        persons.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                personsMouseClicked(evt);
            }
        });
        personScrool.setViewportView(persons);
        if (persons.getColumnModel().getColumnCount() > 0) {
            persons.getColumnModel().getColumn(0).setResizable(false);
            persons.getColumnModel().getColumn(1).setResizable(false);
            persons.getColumnModel().getColumn(2).setResizable(false);
            persons.getColumnModel().getColumn(3).setResizable(false);
            persons.getColumnModel().getColumn(4).setResizable(false);
            persons.getColumnModel().getColumn(5).setResizable(false);
            persons.getColumnModel().getColumn(6).setResizable(false);
        }

        jScrollPane3.setPreferredSize(new java.awt.Dimension(1320, 406));

        blockedPersons.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        blockedPersons.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        blockedPersons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type"
            }
        ));
        blockedPersons.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(blockedPersons);
        if (blockedPersons.getColumnModel().getColumnCount() > 0) {
            blockedPersons.getColumnModel().getColumn(0).setResizable(false);
            blockedPersons.getColumnModel().getColumn(0).setHeaderValue("Name");
            blockedPersons.getColumnModel().getColumn(1).setResizable(false);
            blockedPersons.getColumnModel().getColumn(1).setHeaderValue("Surname");
        }

        validate.setBackground(new java.awt.Color(51, 51, 51));
        validate.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        validate.setForeground(new java.awt.Color(255, 255, 255));
        validate.setBorder(null);
        validate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        validate.setDefaultCapable(false);
        validate.setPreferredSize(new java.awt.Dimension(100, 40));
        validate.setRequestFocusEnabled(false);
        validate.setRolloverEnabled(false);
        validate.setVerifyInputWhenFocusTarget(false);
        validate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validateMouseClicked(evt);
            }
        });
        validate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateActionPerformed(evt);
            }
        });

        reject.setBackground(new java.awt.Color(51, 51, 51));
        reject.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        reject.setForeground(new java.awt.Color(255, 255, 255));
        reject.setBorder(null);
        reject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reject.setDefaultCapable(false);
        reject.setPreferredSize(new java.awt.Dimension(100, 40));
        reject.setRequestFocusEnabled(false);
        reject.setRolloverEnabled(false);
        reject.setVerifyInputWhenFocusTarget(false);
        reject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rejectMouseClicked(evt);
            }
        });
        reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        personnelScreen.setBackground(new java.awt.Color(51, 51, 51));
        personnelScreen.setPreferredSize(new java.awt.Dimension(1380, 800));

        navbar1.setBackground(new java.awt.Color(153, 153, 153));
        navbar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        navbar1.setPreferredSize(new java.awt.Dimension(1320, 60));

        profileMenu.setBackground(new java.awt.Color(51, 51, 51));
        profileMenu.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        profileMenu.setForeground(new java.awt.Color(255, 255, 255));
        profileMenu.setBorder(null);
        profileMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        profileMenu.setDefaultCapable(false);
        profileMenu.setPreferredSize(new java.awt.Dimension(100, 40));
        profileMenu.setRequestFocusEnabled(false);
        profileMenu.setRolloverEnabled(false);
        profileMenu.setVerifyInputWhenFocusTarget(false);
        profileMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMenuMouseClicked(evt);
            }
        });
        profileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileMenuActionPerformed(evt);
            }
        });

        Advertisements.setBackground(new java.awt.Color(153, 153, 153));
        Advertisements.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Advertisements.setForeground(new java.awt.Color(255, 255, 255));
        Advertisements.setText("Advertisements");
        Advertisements.setBorder(null);
        Advertisements.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Advertisements.setDefaultCapable(false);
        Advertisements.setPreferredSize(new java.awt.Dimension(160, 40));
        Advertisements.setRequestFocusEnabled(false);
        Advertisements.setRolloverEnabled(false);
        Advertisements.setVerifyInputWhenFocusTarget(false);
        Advertisements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdvertisementsActionPerformed(evt);
            }
        });

        persons1.setBackground(new java.awt.Color(153, 153, 153));
        persons1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        persons1.setForeground(new java.awt.Color(255, 255, 255));
        persons1.setText("Persons");
        persons1.setBorder(null);
        persons1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        persons1.setDefaultCapable(false);
        persons1.setPreferredSize(new java.awt.Dimension(160, 40));
        persons1.setRequestFocusEnabled(false);
        persons1.setRolloverEnabled(false);
        persons1.setVerifyInputWhenFocusTarget(false);
        persons1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                persons1ActionPerformed(evt);
            }
        });

        persons2.setBackground(new java.awt.Color(153, 153, 153));
        persons2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        persons2.setForeground(new java.awt.Color(255, 255, 255));
        persons2.setText("Blocked Persons");
        persons2.setBorder(null);
        persons2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        persons2.setDefaultCapable(false);
        persons2.setPreferredSize(new java.awt.Dimension(160, 40));
        persons2.setRequestFocusEnabled(false);
        persons2.setRolloverEnabled(false);
        persons2.setVerifyInputWhenFocusTarget(false);
        persons2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                persons2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navbar1Layout = new javax.swing.GroupLayout(navbar1);
        navbar1.setLayout(navbar1Layout);
        navbar1Layout.setHorizontalGroup(
            navbar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navbar1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(persons2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(266, 266, 266)
                .addComponent(persons1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Advertisements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(profileMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        navbar1Layout.setVerticalGroup(
            navbar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navbar1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(navbar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navbar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Advertisements, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(persons1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(persons2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(profileMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        advertisementScrool.setPreferredSize(new java.awt.Dimension(1320, 406));

        advertisements.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        advertisements.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        advertisements.setRowHeight(50);
        advertisements.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Heating", "Room Number", "Price", "Address", "Short Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        advertisements.getTableHeader().setReorderingAllowed(false);
        advertisements.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                advertisementsMouseClicked(evt);
            }
        });
        advertisementScrool.setViewportView(advertisements);
        if (advertisements.getColumnModel().getColumnCount() > 0) {
            advertisements.getColumnModel().getColumn(0).setResizable(false);
            advertisements.getColumnModel().getColumn(1).setResizable(false);
            advertisements.getColumnModel().getColumn(2).setResizable(false);
            advertisements.getColumnModel().getColumn(3).setResizable(false);
            advertisements.getColumnModel().getColumn(4).setResizable(false);
            advertisements.getColumnModel().getColumn(5).setResizable(false);
            advertisements.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout personnelScreenLayout = new javax.swing.GroupLayout(personnelScreen);
        personnelScreen.setLayout(personnelScreenLayout);
        personnelScreenLayout.setHorizontalGroup(
            personnelScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personnelScreenLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(personnelScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(navbar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(advertisementScrool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        personnelScreenLayout.setVerticalGroup(
            personnelScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personnelScreenLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(navbar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(advertisementScrool, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1380, Short.MAX_VALUE)
            .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(personnelScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(personnelScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "profile clicked");

    }//GEN-LAST:event_profileActionPerformed

    private void walletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walletActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "wallet clicked");
    }//GEN-LAST:event_walletActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "exit clicked");

    }//GEN-LAST:event_exitActionPerformed

    private void profileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_profileMenuActionPerformed

    private void profileMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMenuMouseClicked
        // TODO add your handling code here:
        if (profileMenuOpen) {
            this.profileDetail.hide();
            this.personnelScreen.remove(profileDetail);
            profileMenuOpen = false;
            advertisementScrool.setVisible(true);

        } else {
            this.personnelScreen.add(profileDetail);
            profileDetail.show();

            profileDetail.setBounds(1211, 85, 100, 120);
            profile.setBounds(0, 0, 100, 40);
            wallet.setBounds(0, 41, 100, 40);
            exit.setBounds(0, 82, 100, 40);
            advertisementScrool.setVisible(false);
            profileMenuOpen = true;
        }
    }//GEN-LAST:event_profileMenuMouseClicked

    private void AdvertisementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdvertisementsActionPerformed
        // TODO add your handling code here:

        personScrool.hide();
        personnelScreen.add(advertisementScrool);

        advertisementScrool.show();
        advertisementScrool.setBounds(30, 100, 1320, 650);
        advertisements.setBounds(0, 0, 1320, 650);
        getAdvertisementDatas();

    }//GEN-LAST:event_AdvertisementsActionPerformed

    private void getAdvertisementDatas() {
        if (!isAdvertisementsListed) {
            isPersonListed = false;
            Advertisement ad = new Advertisement();
            List<Advertisement> advertisementList = ad.getAllAdvertisementsIsActiveFalse();
            
            DefaultTableModel tblModel = (DefaultTableModel) advertisements.getModel();
            tblModel.setRowCount(0);

            for (Advertisement advertisement : advertisementList) {

                Object tbData[] = {advertisement.getId(), advertisement.getAdvertisementName(), advertisement.getAdvertisementType(), advertisement.getHouse().getHeating(), advertisement.getHouse().getRoomNumber(),
                    advertisement.getPrice(), advertisement.getHouse().getLocation(), advertisement.getHouse().getShortDescription()};

                tblModel.addRow(tbData);
            }
            isAdvertisementsListed = true;
        }
    }

    private void persons1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_persons1ActionPerformed
        advertisementScrool.hide();
        personnelScreen.add(personScrool);

        personScrool.show();
        personScrool.setBounds(30, 100, 1320, 650);
        persons.setBounds(0, 0, 1320, 650);
        getPersonsDatas();
    }//GEN-LAST:event_persons1ActionPerformed

    private void getPersonsDatas() {
        if (!isPersonListed) {
            isAdvertisementsListed = false;
            Person person = new Person();
            List<Person> personList = person.getAllIsActiveFalse();

            DefaultTableModel tblModel = (DefaultTableModel) persons.getModel();
            tblModel.setRowCount(0);

            for (Person personData : personList) {
                Object tbData[] = {personData.getId(), personData.getName(), personData.getSurname(), personData.getEmail(), personData.getIdentityNumber(), personData.getBirthDate(), personData.getGender()};

                tblModel.addRow(tbData);
            }
            isPersonListed = true;
        }
    }
    private void persons2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_persons2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_persons2ActionPerformed

    private void personsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_personsMouseClicked
        // TODO add your handling code here:
        int index = persons.getSelectedRow();
        TableModel model = persons.getModel();
        String id = model.getValueAt(index, 0).toString();
        String updatePersonValidation = "UPDATE persons SET activation_result=true , activation_personnel_id='" + personnel.getPerson_id() + "' WHERE id='" + id + "'";
        String deletePerson = "DELETE FROM persons WHERE id='" + id + "'";

        int result = JOptionPane.showConfirmDialog(null, "Do you want to Validate");
        if (result == 0) {
            try {
                pst = db.prepareStatement(updatePersonValidation);
                pst.execute();
                isPersonListed = false;
                getPersonsDatas();

            } catch (SQLException ex) {
                Logger.getLogger(PersonnelScreen.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

        } else if (result == 1) {
            try {
                pst = db.prepareStatement(deletePerson);
                pst.execute();
                isPersonListed = false;
                getPersonsDatas();

            } catch (SQLException ex) {
                Logger.getLogger(PersonnelScreen.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_personsMouseClicked

    private void advertisementsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_advertisementsMouseClicked
        // TODO add your handling code here:
        int index = advertisements.getSelectedRow();
        TableModel model = advertisements.getModel();
        String id = model.getValueAt(index, 0).toString();
        Advertisement ad = new Advertisement();

        int result = JOptionPane.showConfirmDialog(null, "Do you want to Validate");
        if (result == 0) {
            ad.validateAdvertisement(personnel, Integer.parseInt(id));
            isAdvertisementsListed = false;
            getAdvertisementDatas();
        } else if (result == 1) {
            ad.delete(Integer.parseInt(id));
            isAdvertisementsListed = false;
            getAdvertisementDatas();

        }
    }//GEN-LAST:event_advertisementsMouseClicked

    private void validateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_validateActionPerformed

    private void validateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_validateMouseClicked

    private void rejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rejectActionPerformed

    private void rejectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rejectMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_rejectMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonnelScreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonnelScreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonnelScreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonnelScreen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new PersonnelScreen().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Advertisements;
    private javax.swing.JScrollPane advertisementScrool;
    private javax.swing.JTable advertisements;
    private javax.swing.JTable blockedPersons;
    private javax.swing.JPanel content;
    private javax.swing.JButton exit;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel navbar1;
    private javax.swing.JScrollPane personScrool;
    private javax.swing.JPanel personnelScreen;
    private javax.swing.JTable persons;
    private javax.swing.JButton persons1;
    private javax.swing.JButton persons2;
    private javax.swing.JButton profile;
    private javax.swing.JPanel profileDetail;
    private javax.swing.JButton profileMenu;
    private javax.swing.JButton reject;
    private javax.swing.JButton validate;
    private javax.swing.JButton wallet;
    // End of variables declaration//GEN-END:variables
}
